#!/bin/bash
# BSD 3-Clause License
# 
# Copyright (c) 2017-2018, SÃ©bastien Huss
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# 
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

OUT_level=${OUT_level:-WARNING}
LOG_dir=${LOG_dir:-"./logs"}
SHLIBDIR=${SHLIBDIR:-"$(cd "$(dirname $0)";pwd)/bashlibs"}
. $SHLIBDIR/core.lib.bash
. $SHLIBDIR/test.lib.bash
OUT_dir=${OUT_dir:-"./out"}
DATA_dir=${DATA_dir:-"$(cd "$(dirname $0)";pwd)/data"}
OUT_filePrefix=${OUT_file:-"${SCRIPT_name}.$(log.stamp)"}
DIR=${DIR:-"./tests"}
PRI=${PRI:-3}
OUT=${OUT:-"LOG:TEXT"}

ARGS_info="Automated testing for shell scripts"
args.use.help
args.declare  DIR -d --test-directory Vals NoOption NotMandatory "Path to the tests (Default: ${DIR})"
args.callback DIR test.load
args.option.declare OUT -o --output NotMandatory N "Select the output mode (Default: $OUT)"
args.option OUT LOG "Output an execution log file in $LOG_dir"
args.option OUT TEXT "Output an execution summary"
args.option OUT HTML "Output an HTML summary to $OUT_dir"
args.option OUT JSON "Output a  JSON summary to $OUT_dir"
args.option OUT XML "Output an XML (JUnit compatible) to $OUT_dir"
args.declare PRI -p --priority Vals NoOption NotMandatory "Run test below priority level [1..5] (Default: $PRI)"
args.option.declare GROUP -g --group NotMandatory N "Test group to run"
args.option.declare TST   -t --test  NotMandatory N "Test to run"
ARGS_short_cmd+=(DIR PRI GROUP TST)
out.init
test.load $DIR
args.parse "$@"
mkdir -p $LOG_dir $OUT_dir

LOG_started=0
for om in $(sed 's/:/ /g'<<<$OUT);do
	if [[ "$om" == "LOG" ]];then
		log.start
		LOG_started=1
	fi
done
test.run "$PRI" "$GROUP" "$TST"
R=$?
[ $LOG_started -ne 0 ] && log.end $R
for om in $(sed 's/:/ /g'<<<$OUT);do
	[[ "$om" == "TEXT" ]] && test.reportText
	[[ "$om" == "JSON" ]] && test.reportJSON >$OUT_dir/${OUT_filePrefix}.json
	[[ "$om" == "XML"  ]] && test.reportXML  >$OUT_dir/${OUT_filePrefix}.xml
	[[ "$om" == "HTML" ]] && test.reportHTML >$OUT_dir/${OUT_filePrefix}.html
done
